1:cin>>a>>endl; //cin后面只能出现变量名
  cout<<a<<"\n"; 
2:常量 const int a=10; //常量定义后不能修改，在定义时必须赋值，默认为int类型
       #define A 10+10 //const是C++中引入。#define是C中，且不检查数据类型，不安全。
       #define B A-A //B将会是20
3:指针用于存放一个对象在内存中的地址，通过指针能够间接操作这个对象。
 int i=10; 
 int *p;//指向int的指针指针吧的地址，*p是一个整形变量，只能存放一个整数。
 int **p //指向int指针的指针。
4:指向常量的指针:指针所指的对象是常量，指针本身是变量：const char *pc="dukang";
  指针常量:指针本身是常量，所指向的对象是变量：char *const pc="dukang";
  指向常量的常指针:指针是常量，所指向的对象也是常量，const char *const pc="dukang"; 
  (不能将非const对象的指针指向一个常量对象，将引起编译错误，若要让一个指针指向常量对象，可以将它定义为指向常量的指针。ps:就是不能先定义了指针，在给他赋值常量地址。)
  void指针:
 
5:typedef int feet;该语句会告诉编译器，feet 是 int 的另一个名称
6枚举类型:类型(enumeration)是C++中的一种派生数据类型，它是由用户定义的若干枚举常量的集合。

如果一个变量只有几种可能的值，可以定义为枚举(enumeration)类型。所谓"枚举"是指将变量的值一一列举出来，变量的值只能在列举出来的值的范围内。
    enum color { red, green, blue } c; //默认情况下，第一个名称的值为 0，第二个名称的值为 1，第三个名称的值为 2，以此类推。
    c = blue;

7: 类访问修饰符 punlic protected private
